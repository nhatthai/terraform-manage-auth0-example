name: 'Terraform'

on:
  push:
    branches:
      - main

jobs:
  terraform-test:
    name: 'Terraform TEST'
    runs-on: ubuntu-latest
    environment: TEST
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      STORAGE_ACCOUNT: terraformstorageauth0
      CONTAINER_NAME: tfstatecontainer-test
      ENVIRONMENT: TEST

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      shell: bash
      working-directory: '.'
      run: |
        terraform init -backend-config="storage_account_name=${{ env.STORAGE_ACCOUNT }}" -backend-config="container_name=${{ env.CONTAINER_NAME }}" -backend-config="key=${{ env.ENVIRONMENT }}.auth0.tfstate" -var "environment=${{ env.ENVIRONMENT }}"

    - name: Terraform Validate
      shell: bash
      working-directory: '.'
      run: terraform validate

    - name: Terraform Plan
      shell: bash
      working-directory: '.'
      run: |
        terraform plan -input=false -var-file="terraform.tfvars" -var "auth0_client_id=${{ secrets.AUTH0_CLIENT_ID }}"  -var "auth0_client_secret=${{ secrets.AUTH0_CLIENT_SECRET }}" -var "environment=${{ env.ENVIRONMENT }}"

    - name: Terraform Apply
      shell: bash
      working-directory: '.'
      run: terraform apply -auto-approve -input=false -var-file="terraform.tfvars" -var "auth0_client_id=${{ secrets.AUTH0_CLIENT_ID }}" -var "auth0_client_secret=${{ secrets.AUTH0_CLIENT_SECRET }}" -var "environment=${{ env.ENVIRONMENT }}"

    - name: Store Terraform Output
      id: terraform_outputs
      shell: bash
      working-directory: '.'
      run: |
        app_client_id=$(terraform output application_client_id)
        app_client_id_value=${app_client_id//\"/}
        echo auth0ClientId=$app_client_id_value >> $GITHUB_OUTPUT

    - run: echo ${{ steps.terraform_outputs.outputs.auth0ClientId }}

  terraform-stage:
    needs: [terraform-test]
    name: 'Terraform STAGE'
    runs-on: ubuntu-latest
    environment: STAGE
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      STORAGE_ACCOUNT: terraformstorageauth0
      CONTAINER_NAME: tfstatecontainer-stage
      ENVIRONMENT: STAGE

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: "./"
        args:
          --backend-config="storage_account_name=${{ env.STORAGE_ACCOUNT }}"
          --backend-config="container_name=${{ env.CONTAINER_NAME }}"
          --backend-config="key=${{ env.ENVIRONMENT }}.auth0.tfstate"
          -var "environment=${{ env.ENVIRONMENT }}"

    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: "./"

    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: "./"
        args:
          -var-file="terraform.tfvars"
          -var "auth0_client_id=${{ secrets.AUTH0_CLIENT_ID }}"
          -var "auth0_client_secret=${{ secrets.AUTH0_CLIENT_SECRET }}"
          -var "environment=${{ env.ENVIRONMENT }}"

    - name: Terraform Apply
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: "./"
        args:
          -var-file="terraform.tfvars"
          -var "auth0_client_id=${{ secrets.AUTH0_CLIENT_ID }}"
          -var "auth0_client_secret=${{ secrets.AUTH0_CLIENT_SECRET }}"
          -var "environment=${{ env.ENVIRONMENT }}"

    - name: 'Terraform Output'
      id: terraform
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'output'
        tf_actions_working_dir: "./"
